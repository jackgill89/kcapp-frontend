$ const types = require('../../../../components/scorecard/components/match_types');

<a id="kcapp-logo" style=`display: ${state.demo_mode ? "block" : "none"}; opacity: ${state.demo_mode ? "1" : "0"};`><img src="/images/logo128V.png" /></a>
<if(Object.keys(input.offices).length < 1)>
  <div class="pt-20">
    <div class="block-container-header">
      <i class="fas fa-building"/>
      <span class="ml-10">No offices</span>
    </div>
    <div class="block-container-with-header">
        <div>To start playing, add a venue</div>
        <button type="submit" class="btn btn-primary mt-10" onclick="window.location.href = '/offices'">Add Venue</button>
    </div>
  </div>
</if>
<else-if(Object.keys(input.players).length < 1)>
  <div class="block-container-header pt-20">
    <i class="fas fa-user"/>
    <span class="ml-10">No Players</span>
  </div>
  <div class="block-container-with-header">
      <div>To start playing, add some players</div>
      <button type="submit" class="btn btn-primary mt-10" onclick="window.location.href = '/players'">Add Players</button>
  </div>
</else-if>
<else>
  <form class="pt-20">
      <div class="game-players">
        <div class="block-container-header">
          <i class="fas fa-users"/>
          <span class="ml-10">Players</span>
        </div>
        <div class="block-container-with-header">
          <div class="form-group form-check players-selected">
            <for|player| of=state.selected>
              <player-selector key="players[]" player=player on-add-player("removePlayer") type=state.options.game_type show_handicap=true/>
            </for>
          </div>
        </div>
        <div class="block-container-header">
          <i class="fas fa-mouse-pointer"/>
          <span class="ml-10">Select players</span>
        </div>
        <div class="block-container-with-header">
          <div class="form-group form-check players-all">
            <for|player| of=state.players>
              <player-selector player=player on-add-player("addPlayer") type=state.options.game_type/>
            </for>
          </div>
        </div>
      </div>
      <div class="game-options">
        <div class="block-container-header">
          <i class="fas fa-building"/>
          <span class="ml-10">Offices</span>
        </div>
        <office-selector localstorage=true offices=input.offices showGlobal=true padding="10px 6px 10px 12px" margin="10px" on-office-changed("changeOffice")/>
      </div>
      <div class="game-options">
        <div class="block-container-header">
          <i class="fas fa-cogs"/>
          <span class="ml-10">Game settings</span>
        </div>
        <div class="block-container-with-header">
          <game-option-selector values=input.types options=state.options key="game-type" label="Type" attribute="game_type" defaultValue=state.options.game_type on-value-changed('onGameTypeChanged')/>
          <game-option-selector values=input.scores options=state.options key="starting-score" label="Starting Score" attribute="starting_score" defaultValue=state.options.starting_score/>
          <if(state.options.game_type == types.X01 || state.options.game_type == types.X01HANDICAP)>
            <game-option-selector values=input.outshots options=state.options key="outshot-type" label="Outshot Type" attribute="outshot_type" defaultValue=types.OUTSHOT_DOUBLE/>
            <game-option-selector values=state.maxRounds options=state.options key="max-rounds-x01" label="Max Rounds" attribute="max_rounds" defaultValue=-1/>
          </if>
          <if(state.options.game_type == types.TIC_TAC_TOE)>
            <game-option-selector values=input.outshots options=state.options key="outshot-type" label="Outshot Type" attribute="outshot_type" defaultValue=types.OUTSHOT_DOUBLE/>
          </if>
          <if(state.options.game_type == types.KNOCKOUT)>
            <game-option-selector values=input.lives options=state.options key="starting-lives" label="Starting Lives" attribute="starting_lives" defaultValue=5/>
          </if>
          <if(state.options.game_type == types.ONESEVENTY)>
            <game-option-selector values=input.points_to_win options=state.options key="points-to-win" label="Points To Win" attribute="points_to_win" defaultValue=1/>
            <game-option-selector values=state.maxRounds options=state.options key="max-rounds-oneseventy" label="Max Rounds" attribute="max_rounds" defaultValue=-1/>
          </if>
          <game-option-selector values=input.modes options=state.options key="game-mode" label="Mode" attribute="game_mode" defaultValue=state.options.game_mode/>
          <game-option-selector values=input.stakes options=state.options key="stake" label="Stake" attribute="stake" addNull=true defaultAttrName="item"/>
          <game-option-selector values=state.venues options=state.options key="venue" label="Venue" attribute="venue_id" addNull=true defaultValue=state.options.venue_id/>
          <button class="btn btn-primary" disabled=state.submitting type="submit" on-click("newGame")>Start</button>
        </div>
        <div class="block-container-with-header">
          <div class="block-container-header">
            <i class="fas fa-trophy"/>
            <span class="ml-10">Tournaments</span>
          </div>
          <button type="submit" class="btn btn-warning mt-10" on-click("playOfficial")>Play Official Match</button>
        </div>
      </div>
  </form>
</else>